
<phoebus>
problem = torus
ix1_bc = outflow
ox1_bc = outflow
ix2_bc = reflect
ox2_bc = reflect

<phoebus/mesh>
#bc_vars = primitive
bc_vars = conserved

<parthenon/job>
problem_id  = torus       # problem ID: basename of output filenames

<parthenon/output0>
file_type = rst
dt = 200.0

<parthenon/output1>
variables = p.density,       &
            c.density,       &
            p.velocity,      &
            c.momentum,      &
            p.energy,        &
            c.energy,        &
            pressure,      	 &
            r.p.J,           &
            r.p.H,           &
            g.c.coord,       &
            g.n.coord,       &
            g.c.detgam,      &
            g.c.bcon,        &
            g.c.alpha,       &
            g.c.gcov,        &
            src_terms,       &
            flux_divergence, &
            p.bfield

file_type   = hdf5      # Tabular data dump
#dt          = 5.0       # time increment between outputs
dt          = 1.

<parthenon/time>
nlim        = 5 # -1        # cycle limit
tlim        = 50.0    # time limit
integrator  = rk2       # time integration algorithm
ncycle_out  = 1         # interval for stdout summary info
dt_init_fact = 1.e-6

<parthenon/mesh>
nghost = 4
#refinement = adaptive
#numlevel = 3

nx1         = 128           # Number of zones in X1-direction
x1min       = 0.59          # minimum value of X1; overwritten for the torus problem
x1max       = 3.69          # maximum value of X1; set by <coordinates>/r_outer for the torus problem
ix1_bc      = user          # Inner-X1 boundary condition flag
ox1_bc      = user          # Outer-X1 boundary condition flag

nx2         = 128           # Number of zones in X2-direction
x2min       = 0             # minimum value of X2
x2max       = 1             # maximum value of X2. X2 = 1 -> theta = pi
ix2_bc      = user          # Inner-X2 boundary condition flag
ox2_bc      = user          # Outer-X2 boundary condition flag

nx3         = 1             # Number of zones in X3-direction
x3min       = 0             # minimum value of X3
x3max       = 6.28318530718 # maximum value of X3. 2*pi
ix3_bc      = periodic      # Inner-X3 boundary condition flag
ox3_bc      = periodic      # Outer-X3 boundary condition flfgag

num_threads = 1         # maximum number of OMP threads

# Commenting out meshblock sizes makes the simulation 1 meshblock
# <parthenon/meshblock>
# nx1 = 128
# nx2 = 128
# nx3 = 1

<parthenon/refinement0>
field = c.c.bulk.rho
method = derivative_order_1
max_level = 3

<eos>
type = IdealGas
Gamma = 1.66666666666666666666666667
Cv = 1.0

<physics>
hydro = true
he = false
3t = false
rad = true

<fluid>
xorder = 2
cfl = 0.8
riemann = llf
recon = weno5
c2p_max_iter = 100
c2p_tol = 1.e-8
c2p_method = robust
Ye = false
mhd = true

<geometry>
a = 0.9375

<coordinates>
derefine_poles = false
r_outer = 50

<radiation>
cfl = 0.5
method = moment_eddington
absorption = true
do_nu_electron = true
do_nu_electron_anti = false
do_nu_heavy = false

scattering_fraction = 1.0

<opacity>
type = gray
gray_kappa = 1.e-20

<units>
scale_free = false
geom_mass_msun = 1.
fluid_mass_g = 1.e26

<fixup>
enable_floors = true
enable_mhd_floors = true
enable_rad_floors = true
enable_ceilings = true
enable_flux_fixup = true
enable_c2p_fixup = true
floor_type = ExpX1RhoSie
rho0_floor = 1.0e-8
sie0_floor = 1.0e-3
rho_exp_floor = -2.0
sie_exp_floor = -1.0
ceiling_type = ConstantGamSie
sie0_ceiling = 1.0
gam0_ceiling = 10.0

<torus>
target_beta = 100.
harm_beta_normalization = true
u_jitter = 0.05
kappa = 0.01
rin = 6.0
rmax = 12.0
n_inside_horizon = 5
magnetized = true
initial_radiation = thermal
